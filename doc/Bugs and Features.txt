Copyright (C) Eelco Vriezekolk, Universiteit Twente, Agentschap Telecom.
See LICENSE.md


BUGS
Add a warning (in the intranet version) before leaving the page; or simply intercept the Back action and ignore it.
Sometimes when moving a node localStorage is not up to date with the node's properties.
Undoing a threat-create does not repaint list of node clusters in Common cause failure view
The How to use help-panel is useless. Either improve or remove. A help-panel on keyboard shortcuts might be useful instead.
On standalone: offer Save as an option when closing with unsaved changes.
Under Windows, using Chrome or standalone, a horizontal scrollbar is visible on generated PDFs / printouts.
In a deeply nested tree, the inplace editor for a cluster's name may not fit. Solution: implement inplace editor using a balloon popup.
When removing the last vulnerability on a component, the overall vulnerability level should be set to Extremely Low.
Be consistent: cloud, unknown link, unexplored link. Decision: use "unknown link" as the official term, with "cloud" as a possible informal nickname.
When printing CCF, the accordions are not always all expanded.
SizeDOMElements is not called when browser goes fullscreen. The bottom tab bar may require adjustment. Have to do browser reload instead now. Possible: call SizeDOMEvents whenever a vertical tab is selected?
Change details of a project on the server but not active: function not implemented.
Should retain UI state (accordion SF/CCF open/close, tab seelcted, service selected) independent of project data.

TODO
Add option to duplicate a project.
Undo
With Undo implemented, Cut/Copy/Paste clipboard actions can become more general.
Make UI action scriptable (e.g. UIdrag(type,drop_x,drop_y)) so that all testcases can be automated.
Make class definitions conform to ES6. Use Map instead of _all. Create modules with import/export.
Change variables from var to let/const.
Make the UI more in line with other apps that people are used to these days.
Refresh the UI theming.
Replace #modaldialog by an anonymous <div></div>.
Change node shapes from image to SVG, helps for cleaner resizes. Obsoleted by iconsets?
Try IndexDB instead of localStorage. This will benefit concurrent use in multiple tabs, and may ease the implementation of Undo and concurrent use across computers.
When renaming a node, split at the ^ sign and treat the latter part as the suffix?
New object: area. Like a selection, but fixed. Like a label, but visually less obvious and more resizable.
Add functionality for graph expansion? Expand a cloud into subcomponents? Perhaps using the new Area object?
Create toolbar/buttons for actions in popup menu.
Include CCFs in de calculation of overall threat level? And include the relevant CCFs in the popup vulnerability window for a node? CCFs are too much an add-on, and do not have equal status with SFs.
Sort Single failures by Label.
When changing the type of a node: if the name of the node looks like a default one, then update the name to reflect the new type; otherwise, leave the name untouched.
The sort order on the Failures and Vulnerabilities tab should probably be a Preference.
Exclude entire vulnerabilities in Analysis|Failures and Vulnerabilities tab.
Add a Duplicate function for a selection of nodes. This would duplicate each of the nodes, then duplicate the connections between selected nodes.
Reorder the options in the node menu (change properties at the top, operations {Duplicate, Remove} at the bottom)
Clean up the code so that UI stuff is more clearly separated from the objects themselves. Also rearrange code between rasterMain.js and the objects.
When adding a threat to a Unknown node, the type of the new threat is always tEQT. It should be possible to change the type to tWRD or tWLS. Have 3 typed add buttons?
Have separate Paste functions for merging and overwriting?
Change from accordion widget to the Collapser plugin?
Filter on Single Failures, including on overall threat score.
Sort vulns for a component on name/freq/impact/total/remark
Better handling of redundancy in telecom services.
Set description on added threats.
Consistency report for the entire diagram, plus UI.
Allow comments to be set on a project. Include versioning info?
Allow for icons to be added to nodes (from a fixed library?)

CANNOT REPRODUCE
(no recent bugs)

OTHER / WON'T FIX
The Find textfield has a placeholder attribute; set this also on Remarks. Cannot, because remarks are not an input textfield.
Make the "Total" column in threat tables couloured? Doesn't look good. Tried it.
Two sub-clusters on the same level can have the same name. Since it is OK for sub-clusters not sharing the same parent to have the same name, and since it does not break anything, we won't fix this.
The list in Single Failures cannot be grouped by service, as some components belong to more than one service. They would then be duplicated, which complicates the UI too much (e.g. a single edit may change multiple objects on the screen).
Drag to create may create rnode somewhat outside canvas --> won't fix, will be corrected on first drag/move
Adding a shadow to nodes as they are dragged is not good; the shadow will follow the rectangular contour of the node, not the real shape. That looks odd.
It would be nice if hover over edit-in place would not be a orange rectangle but had rounded corners. Tried it, won't work (as node titles can wrap, a linebreak in a <span> with rounded corners looks odd).


SHARED PROJECTS
By default, projects are stored locally only (private).
When a project is marked 'shared', it will also be stored remotely.
Remotely stored projects that are not also stored locally are called 'remote'.
The Library panel will show local (private and public) as well as remote projects.
Private projects will be grouped separately from shared projects (both local and remote).
If a shared project is active, it will be saved to the server after each transaction.
If, when saving, the project was saved by another browser, a popup will be presented. The user can the choose to either overwrite the server version or make the project private.
Private projects must have a locally unique name. Public projects must have a group-wide unique name.
When a project is made public a unique name must be chosen, if necessary.
Projects have metadata: name, description, last saved timestamp, last saved by.
Browsers have an option for name of creator (Options panel). There is no check whether that name is unique. This is a feature: one person can use two browsers, and two people can work as a team (but not simultaneously).
When editing a shared project, whenever an update is detected to the remote copy, that copy will be downloaded and used instead.

Actions on private projects:
- activate: nothing special.
- details, name or description: nothing special.
- details, change to shared: name must not exist on server, user is prompted to rename first. Otherwise, project is saved. If saving fails,  a warning is shown and the project is marked as private (again).
- delete: no preconditions, no effect on server.
- export: no preconditions, no effect on server.
- merge: no preconditions. If the second project is remote, it will be fetched and merged, and become public.

Actions on shared project:
- activate: update if server version is more recent. If project has been removed from server, show warning and make private.
- details, name or description: new name must not exist locally or on the server, if so the name reverts to the old value. Otherwise, name and description are changed locally and on the server. If the project does not exist remotely, show warning and make local.
- details, change to private: no preconditions. The file will be removed from the server. It is not an error if the project does not exist remotely.
- delete: no preconditions, removed locally and from the server. It is not an error if the project does not exist remotely.
- export: no preconditions, no effect on server. Check if project is still on server, if not: show warning and make local.
- merge: no preconditions. If the second project is remote, it will be fetched and merged, and become public.

Actions on remote project:
- activate: name must not match with existing private project (if so, warn and stop), no effect on server. Project becomes public.
- details, name or description: new name must not exist locally or on the server, if so the name reverts to the old value. Otherwise, name and description are changed locally and on the server. If the project does not exist remotely, show warning and make local.
- details, change to private: no preconditions. The file will be removed from the server. It is not an error if the project does not exist remotely.
- delete: no preconditions, removed locally and from the server. It is not an error if the project does not exist remotely.
- export: no preconditions, no effect on server. Check if project is still on server, if not: show warning and make local.
- merge: no preconditions. If the second project is remote, it will be fetched and merged, and become public.

When (re)loading the tool:
- private projects: no action
- public projects: reload from server, if the server is newer
- remote project: nothing.
